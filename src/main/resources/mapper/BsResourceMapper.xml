<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.coo.permission.dao.BsResourceDao">
	<resultMap id="BaseResultMap" type="BsResource">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="parent_id" property="parentId" jdbcType="BIGINT" />
		<result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
        <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="seq" property="seq" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="yn" property="yn" jdbcType="TINYINT" />
	</resultMap>
	
	<sql id="Base_Column_List">
		<trim prefix="" suffix="" suffixOverrides=",">
		id,
		parent_id,
		name,
        code,
		type,
		url,
		seq,
		description,
		create_time,
		update_time,
		create_user,
		update_user,
		yn,
		</trim>
	</sql>
	
	<!-- 根据Id查询 -->
	<select id="getBsResource" resultMap="BaseResultMap" parameterType="Long">
		select
        <trim prefix="" suffix="" suffixOverrides=",">
            r.id,
            r.parent_id,
            r.name,
            r.code,
            r.type,
            r.url,
            r.seq,
            r.description,
            r.create_time,
            r.update_time,
            r.create_user,
            r.update_user,
            r.yn,
            rp.name as parent_name,
            rp.code as parent_code
        </trim>
        from bs_resource   r
        left join bs_resource  rp on r.parent_id = rp.id
		where r.id = #{id,jdbcType=BIGINT}
	</select>
	
	<!-- 根据条件查询列表 -->
	<select id="findBsResourceList" resultMap="BaseResultMap" parameterType="com.jd.coo.permission.condition.BsResourceCondition">
		select
			<trim prefix="" suffix="" suffixOverrides=",">
			id,
			parent_id,
			name,
	        code,
			type,
			url,
			seq,
			description,
			create_time,
			update_time,
			create_user,
			update_user,
			yn,
			</trim>
		   from bs_resource bs
		
		<where>   
		 yn=1
	
		</where>
	</select>


    <!-- 根据条件查询列表 -->
    <select id="findBsResourceListByParentId" resultMap="BaseResultMap" parameterType="long">
        select
        <include refid="Base_Column_List" />
        from bs_resource
        <where>
            yn=1  and parent_id = #{parentId,jdbcType=BIGINT}
            order by type,parent_id

        </where>
    </select>
    
    <!-- 根据条件查询列表 -->
    <select id="findCountByParentId" resultType="int" parameterType="long">
        select
        count(0)
        from bs_resource
        <where>
            yn=1  and parent_id = #{parentId,jdbcType=BIGINT}

        </where>
    </select>

	
	<!-- 插入实体 -->
	<insert id="insertBsResource" parameterType="BsResource" useGeneratedKeys="true" keyProperty="id">
		insert into bs_resource 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		parent_id,
		name,
        code,
		type,
		url,
		seq,
		description,
		create_time,
		update_time,
		create_user,
		update_user,
		yn,
		</trim>
		values 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		#{parentId,jdbcType=BIGINT},
		#{name,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR},
		#{type,jdbcType=TINYINT},
		#{url,jdbcType=VARCHAR},
		#{seq,jdbcType=INTEGER},
		#{description,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{createUser,jdbcType=VARCHAR},
		#{updateUser,jdbcType=VARCHAR},
		#{yn,jdbcType=TINYINT},
		</trim>
	</insert>
	
	
	<!-- 修改实体 -->
	<update id="updateBsResource" parameterType="BsResource">
		update bs_resource
		<set>
			<trim prefix="" suffix="" suffixOverrides=",">
	        <if test="id != null">
					id = #{id,jdbcType=BIGINT},
	      		</if>
	        <if test="parentId != null">
					parent_id = #{parentId,jdbcType=BIGINT},
	      		</if>
	        <if test="name != null">
					name = #{name,jdbcType=VARCHAR},
	      		</if>
                <if test="code != null">
                    code = #{code,jdbcType=VARCHAR},
                </if>
			<if test="type != 0">
					type = #{type,jdbcType=TINYINT},
	      		</if>
	        <if test="url != null">
					url = #{url,jdbcType=VARCHAR},
	      		</if>
			<if test="seq != 0">
					seq = #{seq,jdbcType=INTEGER},
	      		</if>
	        <if test="description != null">
					description = #{description,jdbcType=VARCHAR},
	      		</if>
	        <if test="createTime != null">
					create_time = #{createTime,jdbcType=TIMESTAMP},
	      		</if>
	        <if test="updateTime != null">
					update_time = #{updateTime,jdbcType=TIMESTAMP},
	      		</if>
	        <if test="createUser != null">
					create_user = #{createUser,jdbcType=VARCHAR},
	      		</if>
	        <if test="updateUser != null">
					update_user = #{updateUser,jdbcType=VARCHAR},
	      		</if>
			<if test="yn != 0">
					yn = #{yn,jdbcType=TINYINT},
	      		</if>
			</trim>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除实体 -->
	<update id="deleteBsResource" parameterType="Long">
		delete from  bs_resource
		where id = #{id,jdbcType=BIGINT}
	</update>
	 <!-- 删除用户 -->
    <update id="deleteBsResourceBatch" parameterType="long[]">
        delete from  bs_resource
        where  1=1
             and id in
             <foreach item="item" collection="ids" index="index"  open="(" separator="," close=")">
					#{item,jdbcType=BIGINT}
            </foreach>
    </update>
    
    
      <!-- 根据条件查询列表 -->
    <select id="findBsResourceListByCondition" resultMap="BaseResultMap" parameterType="com.jd.coo.permission.condition.UserCondition">
        select distinct br.id,br.parent_id,br.name,code,br.url,br.type
        from
        bs_resource  br
        join role_resource_rel rrr on br.id = rrr.resource_id and rrr.yn = 1
        join role r on r.id = rrr.role_id and rrr.yn = 1
        join user_role_rel urr on r.id = urr.role_id and rrr.yn = 1
        join user u on u.id = urr.user_id and rrr.yn = 1
        <where>
            u.yn = 1 and (type=2 or type=1) and u.user_code=#{userCode,jdbcType=VARCHAR}
        </where>
        order by parent_id,br.create_time asc
    </select>
    
       <!-- 根据条件查询列表 -->
    <select id="findBsResourceListByRole" resultMap="BaseResultMap"  parameterType="string">
        select distinct br.id,br.parent_id,br.name,code,br.url,br.type
        from
        bs_resource  br
        join role_resource_rel rrr on br.id = rrr.resource_id and rrr.yn = 1
        join role r on r.id = rrr.role_id and rrr.yn = 1
        <where>
           (type=2 or type=1) and r.role_code=#{roleCode,jdbcType=VARCHAR}
        </where>
        order by parent_id
    </select>
    
    
       <!-- 根据条件查询列表 -->
    <select id="findResourceByUserCodeAndResource" resultType="int" parameterType="com.jd.coo.permission.condition.BsResourceCondition">
        select count(0)
        from
        bs_resource  br
        join role_resource_rel rrr on br.id = rrr.resource_id and rrr.yn = 1
        join role r on r.id = rrr.role_id and rrr.yn = 1
        join user_role_rel urr on r.id = urr.role_id and rrr.yn = 1
        join user u on u.id = urr.user_id and rrr.yn = 1
        <where>
            u.yn = 1 and  br.type=3 and br.code = #{po.code,jdbcType=VARCHAR} and u.user_code=#{po.userCode,jdbcType=VARCHAR}
        </where>
        order by parent_id
    </select>
    
</mapper>